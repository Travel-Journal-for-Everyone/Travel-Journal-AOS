name: Android CI

# 해당 코드는 main 브랜치에 push 또는 PR 이벤트가 발생하면 CI/CD를 실행하도록 지정해준다
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Jobs는 실행할 작업을 정리해준다. 
jobs:
  build:
    # 빌드 작업이 실행될 환경을 정의함
    # 최신 버전의 Ubuntu 환경(Default)를 지정
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      # Clean Build
    - name: Clean Build
      run: ./gradlew clean
      # 코드가 공식 컨벤션에 틀린 것이 없는지 검사
    - name: Run ktlint
      run: ./gradlew ktlintCheck
      # 작성된 Unit Test를 실행해서 검사
    - name: Run Unit Test
      run: ./gradlew test
      # 작성된 Android Test를 실행해서 검사

      # 전체 빌드는 오래걸리므로 apk만 추출
    - name: Assemble
      run: ./gradlew asssemble


      # Debug apk를 업로드해서 다운
    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: debug
        path: ./app/build/outputs/apk/debug/app-debug.apk
      
      # Release apk를 업로드해서 다운
    - name: Upload Release APK
      uses: actions/upload-artifact@v4
      with:
        name: release
        path: ./app/build/outputs/apk/release/app-release-unsigned.apk
     
    
